#pragma once

#include <iostream>
#include <fstream>
#include <cstring>
#include "../../io/printer.h"
#include "../../io/file.h"
#include "../../converter/converter.h"

struct BITMAPFILEHEADER {
    ushort bfType;
    uint bfSize;
    ushort bfReserved1;
    ushort bfReserved2;
    uint bfOffBits;
};

struct BITMAPINFOHEADER {
    uint biSize;
    int biWidth;
    int biHeight;
    ushort biPlanes;
    ushort biBitCount;
    int biCompression;
    uint biSizeImage;
    int biXPelsPerMeter;
    int biYPelsPerMeter;
    uint biClrUsed;
    uint biClrImportant;
};

struct microcin_config {
    uint8_t xor_byte;
    uint32_t url_len;
    storage_p url;
    uint32_t version_len;
    storage_p version;
    uint32_t target_id_len;
    storage_p target_id;
    uint16_t time;
    uint32_t len;
};

struct microcin_stegano {
    BITMAPFILEHEADER bfh;
    BITMAPINFOHEADER bih;
    uint32_t len;
    uint32_t domain_len;
    uint8_t xor_byte;
    storage_p mz_dec;
    storage_p domain_dec;
};

// config related functions
uint32_t decrypt_len(const storage_p enc, const uint8_t key);
void decrypt_content(const storage_p enc, const uint8_t key);
void parse_microcin_config (const std::string& fn);
void print_microcin_config (const microcin_config& mc);

// steganography related functions
void read_bfh(file& m_file, microcin_stegano& ms);
void read_bih(file& m_file, microcin_stegano& ms);
void parse_microcin_stegano(const std::string& fn);
void print_microcin_stegano(const microcin_stegano &ms);
